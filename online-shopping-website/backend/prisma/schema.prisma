// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique  
  username  String   @unique
  role      UserRole
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String?
  lastName  String?
  address1  String
  orders    Order[]

  //seller stuffs

  sellerName  String?
  items       Item[]
}

enum UserRole{
  CUSTOMER
  SELLER
  ADMIN
}

model Order {
  id             Int    @id @default(autoincrement())
  createdAt      DateTime @default(now())
  user           User   @relation(fields: [userId], references: [id]) // so this is a little difficult to explain but essentially we need to link a user to a list of orders. We do that by taking the Id of the user and placing it into the table of orders. Technically this isnt required but its a nice to have thing
  userId         Int
  items          Item[]
  itemQuantities Int[]

}

model Item {
  id      Int     @id @default(autoincrement())
  name    String
  price   Float
  salePrice Float?
  description String
  picture String
  promoted Boolean
  orders  Order[]
  brand   Brand   @relation(fields: [brandId], references: [id])
  brandId Int
  seller  User @relation(fields: [sellerId], references: [id])
  sellerId Int
  totalQuantity Int?
}

model Brand {
  id    Int    @id @default(autoincrement())
  name  String
  description String
  items Item[]
}
